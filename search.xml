<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>日记的开始</title>
      <link href="/2024/03/04/page/"/>
      <url>/2024/03/04/page/</url>
      
        <content type="html"><![CDATA[<h1 id="my-first-blog"><a href="#my-first-blog" class="headerlink" title="my first blog"></a>my first blog</h1><p>在学习过程中突然有了记笔记的想法，这样可以时时记录学习过程，免得导师问这周干了什么的时候只能擦汗，于是就想到了搭建个人博客，用日记记录日常学习的过程。<br>因为文档生成有一个固定的模板，方便博客框架对文档信息进行渲染显示，因此为了避免每次都需要复制粘贴这个模板，我就用自动化脚本的方式来完成这一过程。</p><h2 id="保存时运行脚本"><a href="#保存时运行脚本" class="headerlink" title="保存时运行脚本"></a>保存时运行脚本</h2><p>vscode中下载run on save插件，并在setting.json中文件进行设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&quot;emeraldwalk.runonsave&quot;: &#123;</span><br><span class="line">    &quot;commands&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;match&quot;: &quot;\\.md$&quot;,</span><br><span class="line">            &quot;cmd&quot;: &quot;python $&#123;workspaceFolder&#125;/your_script_path.py $&#123;file&#125;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就能匹配所有md文件，在保存过程中调用python脚本，<br>python脚本是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前日期和时间</span></span><br><span class="line">current_datetime = datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line">file_path = sys.argv[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update_or_insert_updated_field</span>(<span class="params">content, current_datetime</span>):</span><br><span class="line">    <span class="comment"># 检测是否已存在updated字段，并准备相应的正则表达式</span></span><br><span class="line">    updated_pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;updated: [\d-]+\s[\d:]+&#x27;</span>)</span><br><span class="line">    date_pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;date: [\d-]+\s[\d:]+&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> updated_pattern.search(content):</span><br><span class="line">        <span class="comment"># 如果存在updated字段，则更新其值</span></span><br><span class="line">        updated_content = updated_pattern.sub(<span class="string">f&#x27;updated: <span class="subst">&#123;current_datetime&#125;</span>&#x27;</span>, content)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 如果不存在updated字段，找到date字段并在其下插入updated字段</span></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">replacement</span>(<span class="params"><span class="keyword">match</span></span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;<span class="keyword">match</span>.group(<span class="number">0</span>)&#125;</span>\nupdated: <span class="subst">&#123;current_datetime&#125;</span>&quot;</span></span><br><span class="line">        updated_content = date_pattern.sub(replacement, content)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> updated_content</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;r+&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    content = file.read()</span><br><span class="line">    updated_content = update_or_insert_updated_field(content, current_datetime)</span><br><span class="line">    file.seek(<span class="number">0</span>)</span><br><span class="line">    file.write(updated_content)</span><br><span class="line">    file.truncate()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>它能自动获取md文档，并在文档顶部的模板中更新updated时间<br>使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page_name</span><br></pre></td></tr></table></figure><p>就能新建一个含有原始文档模板的文件</p><h1 id="todo-list"><a href="#todo-list" class="headerlink" title="todo list"></a>todo list</h1><ul><li><input disabled="" type="checkbox"> 保存文件时弹出窗口选择文章tags</li><li><input disabled="" type="checkbox"> 完成一篇大模型公平性文献阅读</li><li><input disabled="" type="checkbox"> B站视频本地部署llama2</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 学习日常 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
